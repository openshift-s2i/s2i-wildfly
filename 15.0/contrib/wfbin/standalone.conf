#!/bin/bash

function print_sed_exp_replace_env_var {
  sed_exp=""
  for openshift_var in $(env | grep OPENSHIFT_ | awk -F '=' '{print $1}')
  do
    # environment variable values that contain " or / need to be escaped
    # or they will cause problems in the sed command line.
    variable_val=$(echo "${!openshift_var}" | sed -e "s@\/@\\\\/@g" | sed -e "s/\"/\\\\\"/g")
    # the entire sed s/search/replace/g command needs to be quoted in case the variable value
    # contains a space. 
    sed_exp="${sed_exp} -e \"s/\\\${env.${openshift_var}}/${variable_val}/g\""
  done
  printf "%s\n" "$sed_exp"
}

if [ -n "$DEFAULT_DATASOURCE" ]
then
  export OPENSHIFT_DEFAULT_DATASOURCE=$DEFAULT_DATASOURCE
fi

# default datasource
export OPENSHIFT_EXAMPLE_DATASOURCE=${EXAMPLE_DATASOURCE:-ExampleDS}

if [ ! -n "${OPENSHIFT_DEFAULT_DATASOURCE}" ]
then
  export OPENSHIFT_DEFAULT_DATASOURCE=${OPENSHIFT_EXAMPLE_DATASOURCE}
fi

# mysql db container must be linked w/ alias "mysql"
export MYSQL_ENABLED="false"
if [ -n "$MYSQL_DATABASE" ]
then
  export OPENSHIFT_MYSQL_DB_PORT=$MYSQL_SERVICE_PORT
  export OPENSHIFT_MYSQL_DB_HOST=$MYSQL_SERVICE_HOST
  export OPENSHIFT_MYSQL_DB_PASSWORD=$MYSQL_PASSWORD
  export OPENSHIFT_MYSQL_DB_USERNAME=$MYSQL_USER
  export OPENSHIFT_MYSQL_DB_URL=mysql://${OPENSHIFT_MYSQL_DB_USERNAME}:${OPENSHIFT_MYSQL_DB_PASSWORD}@${OPENSHIFT_MYSQL_DB_HOST}:${OPENSHIFT_MYSQL_DB_PORT}/
  export OPENSHIFT_MYSQL_DB_NAME=$MYSQL_DATABASE
  if [ -n "$MYSQL_DATASOURCE" ]
  then
    export OPENSHIFT_MYSQL_DATASOURCE=$MYSQL_DATASOURCE
  else
    export OPENSHIFT_MYSQL_DATASOURCE="MySQLDS"
  fi
  if [ ! -n "${OPENSHIFT_DEFAULT_DATASOURCE}" ]
  then
    export OPENSHIFT_DEFAULT_DATASOURCE=${OPENSHIFT_MYSQL_DATASOURCE}
  fi
  export MYSQL_ENABLED="true"
fi    

# postgresql db container must be linked w/ alias "postgresql"
export POSTGRESQL_ENABLED="false"
if [ -n "$POSTGRESQL_DATABASE" ]
then
  export OPENSHIFT_POSTGRESQL_DB_PORT=$POSTGRESQL_SERVICE_PORT
  export OPENSHIFT_POSTGRESQL_DB_HOST=$POSTGRESQL_SERVICE_HOST
  export OPENSHIFT_POSTGRESQL_DB_PASSWORD=$POSTGRESQL_PASSWORD
  export OPENSHIFT_POSTGRESQL_DB_USERNAME=$POSTGRESQL_USER
  export OPENSHIFT_POSTGRESQL_DB_URL=postgresql://${OPENSHIFT_POSTGRESQL_DB_USERNAME}:${OPENSHIFT_POSTGRESQL_DB_PASSWORD}@${OPENSHIFT_POSTGRESQL_DB_HOST}:${OPENSHIFT_POSTGRESQL_DB_PORT}/
  export OPENSHIFT_POSTGRESQL_DB_NAME=$POSTGRESQL_DATABASE
  if [ -n "$POSTGRESQL_DATASOURCE" ]
  then
    export OPENSHIFT_POSTGRESQL_DATASOURCE=$POSTGRESQL_DATASOURCE
  else
    export OPENSHIFT_POSTGRESQL_DATASOURCE="PostgreSQLDS"
  fi
  if [ ! -n "${OPENSHIFT_DEFAULT_DATASOURCE}" ]
  then
    export OPENSHIFT_DEFAULT_DATASOURCE=${OPENSHIFT_POSTGRESQL_DATASOURCE}
  fi
  export POSTGRESQL_ENABLED="true"
fi    

if [ ! -n "${OPENSHIFT_DEFAULT_DATASOURCE}" ]
then
  export OPENSHIFT_DEFAULT_DATASOURCE="ExampleDS"
fi

# Using AUTO_DEPLOY_EXPLODED keeps the env name in sync w/ the EAP image,
# but the variable substitution logic we do on the standalone.xml
# only supports variables prefixed with OPENSHIFT_, so we need to
# reassign it (and handle defaulting)
export OPENSHIFT_AUTO_DEPLOY_EXPLODED=${AUTO_DEPLOY_EXPLODED:-false}

export OPENSHIFT_HOSTNAME=$HOSTNAME
     
max_threads=$(ulimit -u)

if ! [[ "$max_threads" =~ ^[0-9]+$ ]] ; then
        max_threads=1024
fi

if [ -z "$MESSAGING_THREAD_RATIO" ]; then
    MESSAGING_THREAD_RATIO=0.2
fi

if [ -z "$OPENSHIFT_SMTP_HOST" ]; then
    export OPENSHIFT_SMTP_HOST="localhost"
fi

# default to 512meg of total container memory (heap will be a percentage of this value)
max_memory_mb=512
# use historical OPENSHIFT_GEAR_MEMORY_MB for container memory size, if specified
if [ -n "$OPENSHIFT_GEAR_MEMORY_MB" ]; then
  max_memory_mb=$OPENSHIFT_GEAR_MEMORY_MB
# otherwise try to set the container memory size based on the cgroup limits
else
  CONTAINER_MEMORY_IN_BYTES=`cat /sys/fs/cgroup/memory/memory.limit_in_bytes`
  DEFAULT_MEMORY_CEILING=$((2**40-1))
  if [ "${CONTAINER_MEMORY_IN_BYTES}" -lt "${DEFAULT_MEMORY_CEILING}" ]; then
      max_memory_mb=$((${CONTAINER_MEMORY_IN_BYTES}/1024**2))
  fi 
fi
if [ -z "$JVM_HEAP_RATIO" ]; then
    JVM_HEAP_RATIO=0.5
fi
max_heap=$( echo "$max_memory_mb * $JVM_HEAP_RATIO" | bc | awk '{print int($1+0.5)}')

messaging_thread_pool_max_size=$( echo "$max_threads * $MESSAGING_THREAD_RATIO" | bc | awk '{print int($1+0.5)}')
messaging_scheduled_thread_pool_max_size=5
# $( echo "$max_threads * $MESSAGING_THREAD_RATIO" | bc | awk '{print int($1+0.5)}')

if [ $max_heap -lt 1024 ]
then
    memory_options="-XX:+UseParallelGC -Xms40m -Xmx${max_heap}m -XX:+AggressiveOpts -XX:MinHeapFreeRatio=20 -XX:MaxHeapFreeRatio=40 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dorg.apache.tomcat.util.LOW_MEMORY=true" 
else
    memory_options="-XX:+UseParallelGC -Xms40m -Xmx${max_heap}m -XX:+AggressiveOpts -XX:MinHeapFreeRatio=20 -XX:MaxHeapFreeRatio=40 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90"
fi

if [ -z "${OPENSHIFT_WILDFLY_CLUSTER_PROXY_PORT}" ]; then
    export OPENSHIFT_WILDFLY_CLUSTER_PROXY_PORT=7600
fi

if [ -z "${OPENSHIFT_WILDFLY_CLUSTER}" ]; then
    export OPENSHIFT_WILDFLY_CLUSTER="${OPENSHIFT_JBOSSEAP_IP}[${OPENSHIFT_JBOSSEAP_CLUSTER_PORT}]"
fi

sed_replace_env=$(print_sed_exp_replace_env_var)

# Timestamp based filename for uniquenss.
# %s%N would be more unique but is not portable outside of linux
systime=`date +%s`

# Due to how bash handles quotes within variables, we need to write the entire
# sed command out to a file and then run it, rather than running the sed
# command directly from within the script, passing the variables as arguments
# See http://mywiki.wooledge.org/BashFAQ/050
cat <<EOF > /tmp/sed_${systime}.sh
sed -i -e "s/\\\${mysql.enabled}/$MYSQL_ENABLED/g" \
       -e "s/\\\${postgresql.enabled}/$POSTGRESQL_ENABLED/g" \
       -e "s/\\\${messaging.thread.pool.max.size}/$messaging_thread_pool_max_size/g" \
       -e "s/\\\${messaging.scheduled.thread.pool.max.size}/$messaging_scheduled_thread_pool_max_size/g" \
       ${sed_replace_env} \
       /wildfly/standalone/configuration/standalone.xml > /dev/null 2>&1
EOF
. /tmp/sed_${systime}.sh
rm /tmp/sed_${systime}.sh

#
# Specify options to pass to the Java VM.
#

if [ "x$JBOSS_MODULES_SYSTEM_PKGS" = "x" ]; then
   JBOSS_MODULES_SYSTEM_PKGS="org.jboss.byteman"
fi

if [ -z "$JAVA_OPTS" ]; then
   JAVA_OPTS="$memory_options -DOPENSHIFT_APP_UUID=${OPENSHIFT_APP_UUID} -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS -Djava.awt.headless=true -Dorg.jboss.resolver.warning=true -Djava.net.preferIPv4Stack=true -Dfile.encoding=UTF-8 -Djboss.node.name=${OPENSHIFT_HOSTNAME} -Djgroups.bind_addr=0.0.0.0 -Dorg.apache.coyote.http11.Http11Protocol.COMPRESSION=on"
   if [ ! -z "$ENABLE_JPDA" ]; then
      JAVA_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=0.0.0.0:8787,server=y,suspend=n ${JAVA_OPTS}"
   fi
fi

if [ -n "$JAVA_OPTS_EXT" ]; then
    JAVA_OPTS="$JAVA_OPTS $JAVA_OPTS_EXT"
fi

export JBOSS_MODULEPATH=/wildfly/provided_modules

if [ ! -z $OPENSHIFT_WILDFLY_MODULE_PATH ]; then
   export JBOSS_MODULEPATH=$JBOSS_MODULEPATH:$OPENSHIFT_WILDFLY_MODULE_PATH
fi

export JBOSS_MODULEPATH=$JBOSS_MODULEPATH:/wildfly/modules
export JAVA_OPTS



